package game;

public class Piece {
	private Player player;
	private Board b = null;
	private int [] coords = new int[2];
	private int connectCount = 1;
	
	public Piece(Player p) {
		this.player = p;
	}
	
	public void setBoard(Board b ) {
		this.b = b;
	}
	public Board getBoard() {
		return this.b;
	}
	
	public int[] getCoords() {
		return this.coords;
	}
	
	public void setcoords(int[] coords) {
		if(this.b == null)
			throw new IllegalStateException("board must be not be null to set coordinates");
		if(coords.length != 2) 
			throw new IllegalArgumentException("coordinate array must be length 2");
		
		if(0 < coords[0] || coords[0] > b.getHeight() -1 || 0 < coords[1] || coords[1] > b.getWidth() - 1) 
			throw new IllegalArgumentException("Coordinates cannot be outside the bounds of the board");
		
		
		this.coords = coords;
		updateConnect4();
	}
	
	private void updateConnect4() {
		//get location on board; (don't have to check for nulls since only being called after setting coords
		Board board = this.b;
		int row = this.coords[0];
		int col = this.coords[1];
//		board should look something like this
//		_ _ _
//		_ p _
//		_ _ _
		if(row - 1 >= 0) {
			
		}
		
		//sum up connections on opposite sides
		
		//if sum >= 4 then you got a connect 4
	}
	
	private void recurseConnect4(Piece prev) {
		return;
	}
	
	public boolean hasConnect4() {
		return this.connectCount >= 4;
	}
	
	
	public String toString() {
		return Character.toString(this.player.getColour().name().charAt(0));
	}
}
